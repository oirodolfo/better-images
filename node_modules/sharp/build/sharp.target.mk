# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := sharp
DEFS_Debug := \
	'-DNODE_GYP_MODULE_NAME=sharp' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-D_DARWIN_USE_64_BIT_INODE=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DBUILDING_NODE_EXTENSION' \
	'-DDEBUG' \
	'-D_DEBUG' \
	'-DV8_ENABLE_CHECKS'

# Flags passed to all source files.
CFLAGS_Debug := \
	-O0 \
	-gdwarf-2 \
	-mmacosx-version-min=10.7 \
	-arch x86_64 \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Debug := \
	-fno-strict-aliasing

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-std=c++11 \
	-stdlib=libc++ \
	-fno-threadsafe-statics \
	-fexceptions \
	-Wall \
	-O3

# Flags passed to only ObjC files.
CFLAGS_OBJC_Debug :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Debug :=

INCS_Debug := \
	-I/Users/rodolfo.costa/.node-gyp/8.11.4/include/node \
	-I/Users/rodolfo.costa/.node-gyp/8.11.4/src \
	-I/Users/rodolfo.costa/.node-gyp/8.11.4/deps/openssl/config \
	-I/Users/rodolfo.costa/.node-gyp/8.11.4/deps/openssl/openssl/include \
	-I/Users/rodolfo.costa/.node-gyp/8.11.4/deps/uv/include \
	-I/Users/rodolfo.costa/.node-gyp/8.11.4/deps/zlib \
	-I/Users/rodolfo.costa/.node-gyp/8.11.4/deps/v8/include \
	-I$(srcdir)/../nan \
	-I/usr/local/include \
	-I/usr/include/libxml2 \
	-I/usr/local/Cellar/vips/8.7.1/include \
	-I/usr/local/Cellar/libgsf/1.14.44/include/libgsf-1 \
	-I/usr/local/Cellar/fftw/3.3.8/include \
	-I/usr/local/Cellar/graphicsmagick/1.3.31/include/GraphicsMagick \
	-I/usr/local/Cellar/orc/0.4.28/include/orc-0.4 \
	-I/usr/local/Cellar/little-cms2/2.9/include \
	-I/usr/local/Cellar/poppler/0.71.0_1/include/poppler/glib \
	-I/usr/local/Cellar/poppler/0.71.0_1/include/poppler \
	-I/usr/local/Cellar/librsvg/2.44.9/include/librsvg-2.0 \
	-I/usr/local/Cellar/gdk-pixbuf/2.38.0/include/gdk-pixbuf-2.0 \
	-I/usr/local/Cellar/cairo/1.16.0/include/cairo \
	-I/usr/local/Cellar/pixman/0.34.0_1/include/pixman-1 \
	-I/usr/local/Cellar/webp/1.0.1/include \
	-I/usr/local/Cellar/pango/1.42.4/include/pango-1.0 \
	-I/usr/local/Cellar/harfbuzz/2.2.0/include/harfbuzz \
	-I/usr/local/Cellar/graphite2/1.3.12/include \
	-I/usr/local/Cellar/fribidi/1.0.5/include/fribidi \
	-I/usr/local/Cellar/fontconfig/2.13.1/include \
	-I/usr/local/opt/freetype/include/freetype2 \
	-I/usr/local/Cellar/libtiff/4.0.10/include \
	-I/usr/local/Cellar/libpng/1.6.35/include/libpng16 \
	-I/usr/local/Cellar/jpeg/9c/include \
	-I/usr/local/Cellar/libexif/0.6.21/include \
	-I/usr/local/Cellar/glib/2.58.1/include/glib-2.0 \
	-I/usr/local/Cellar/glib/2.58.1/lib/glib-2.0/include \
	-I/usr/local/opt/gettext/include

DEFS_Release := \
	'-DNODE_GYP_MODULE_NAME=sharp' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-D_DARWIN_USE_64_BIT_INODE=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DBUILDING_NODE_EXTENSION'

# Flags passed to all source files.
CFLAGS_Release := \
	-Os \
	-gdwarf-2 \
	-mmacosx-version-min=10.7 \
	-arch x86_64 \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Release := \
	-fno-strict-aliasing

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-std=c++11 \
	-stdlib=libc++ \
	-fno-threadsafe-statics \
	-fexceptions \
	-Wall \
	-O3 \
	-Wno-deprecated-declarations

# Flags passed to only ObjC files.
CFLAGS_OBJC_Release :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Release :=

INCS_Release := \
	-I/Users/rodolfo.costa/.node-gyp/8.11.4/include/node \
	-I/Users/rodolfo.costa/.node-gyp/8.11.4/src \
	-I/Users/rodolfo.costa/.node-gyp/8.11.4/deps/openssl/config \
	-I/Users/rodolfo.costa/.node-gyp/8.11.4/deps/openssl/openssl/include \
	-I/Users/rodolfo.costa/.node-gyp/8.11.4/deps/uv/include \
	-I/Users/rodolfo.costa/.node-gyp/8.11.4/deps/zlib \
	-I/Users/rodolfo.costa/.node-gyp/8.11.4/deps/v8/include \
	-I$(srcdir)/../nan \
	-I/usr/local/include \
	-I/usr/include/libxml2 \
	-I/usr/local/Cellar/vips/8.7.1/include \
	-I/usr/local/Cellar/libgsf/1.14.44/include/libgsf-1 \
	-I/usr/local/Cellar/fftw/3.3.8/include \
	-I/usr/local/Cellar/graphicsmagick/1.3.31/include/GraphicsMagick \
	-I/usr/local/Cellar/orc/0.4.28/include/orc-0.4 \
	-I/usr/local/Cellar/little-cms2/2.9/include \
	-I/usr/local/Cellar/poppler/0.71.0_1/include/poppler/glib \
	-I/usr/local/Cellar/poppler/0.71.0_1/include/poppler \
	-I/usr/local/Cellar/librsvg/2.44.9/include/librsvg-2.0 \
	-I/usr/local/Cellar/gdk-pixbuf/2.38.0/include/gdk-pixbuf-2.0 \
	-I/usr/local/Cellar/cairo/1.16.0/include/cairo \
	-I/usr/local/Cellar/pixman/0.34.0_1/include/pixman-1 \
	-I/usr/local/Cellar/webp/1.0.1/include \
	-I/usr/local/Cellar/pango/1.42.4/include/pango-1.0 \
	-I/usr/local/Cellar/harfbuzz/2.2.0/include/harfbuzz \
	-I/usr/local/Cellar/graphite2/1.3.12/include \
	-I/usr/local/Cellar/fribidi/1.0.5/include/fribidi \
	-I/usr/local/Cellar/fontconfig/2.13.1/include \
	-I/usr/local/opt/freetype/include/freetype2 \
	-I/usr/local/Cellar/libtiff/4.0.10/include \
	-I/usr/local/Cellar/libpng/1.6.35/include/libpng16 \
	-I/usr/local/Cellar/jpeg/9c/include \
	-I/usr/local/Cellar/libexif/0.6.21/include \
	-I/usr/local/Cellar/glib/2.58.1/include/glib-2.0 \
	-I/usr/local/Cellar/glib/2.58.1/lib/glib-2.0/include \
	-I/usr/local/opt/gettext/include

OBJS := \
	$(obj).target/$(TARGET)/src/common.o \
	$(obj).target/$(TARGET)/src/metadata.o \
	$(obj).target/$(TARGET)/src/stats.o \
	$(obj).target/$(TARGET)/src/operations.o \
	$(obj).target/$(TARGET)/src/pipeline.o \
	$(obj).target/$(TARGET)/src/sharp.o \
	$(obj).target/$(TARGET)/src/utilities.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# Make sure our dependencies are built before any of us.
$(OBJS): | $(obj).target/libvips-cpp.stamp

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))
$(OBJS): GYP_OBJCFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE)) $(CFLAGS_OBJC_$(BUILDTYPE))
$(OBJS): GYP_OBJCXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE)) $(CFLAGS_OBJCC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-undefined dynamic_lookup \
	-Wl,-no_pie \
	-Wl,-search_paths_first \
	-mmacosx-version-min=10.7 \
	-arch x86_64 \
	-L$(builddir) \
	-stdlib=libc++

LIBTOOLFLAGS_Debug := \
	-undefined dynamic_lookup \
	-Wl,-no_pie \
	-Wl,-search_paths_first

LDFLAGS_Release := \
	-undefined dynamic_lookup \
	-Wl,-no_pie \
	-Wl,-search_paths_first \
	-mmacosx-version-min=10.7 \
	-arch x86_64 \
	-L$(builddir) \
	-stdlib=libc++

LIBTOOLFLAGS_Release := \
	-undefined dynamic_lookup \
	-Wl,-no_pie \
	-Wl,-search_paths_first

LIBS := \
	-L/usr/local/Cellar/vips/8.7.1/lib \
	-L/usr/local/Cellar/glib/2.58.1/lib \
	-L/usr/local/opt/gettext/lib \
	-lvips-cpp \
	-lvips \
	-lgobject-2.0 \
	-lglib-2.0 \
	-lintl \
	-Wl,-framework \
	-Wl,CoreFoundation

$(builddir)/sharp.node: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(builddir)/sharp.node: LIBS := $(LIBS)
$(builddir)/sharp.node: GYP_LIBTOOLFLAGS := $(LIBTOOLFLAGS_$(BUILDTYPE))
$(builddir)/sharp.node: TOOLSET := $(TOOLSET)
$(builddir)/sharp.node: $(OBJS) FORCE_DO_CMD
	$(call do_cmd,solink_module)

all_deps += $(builddir)/sharp.node
# Add target alias
.PHONY: sharp
sharp: $(builddir)/sharp.node

# Short alias for building this executable.
.PHONY: sharp.node
sharp.node: $(builddir)/sharp.node

# Add executable to "all" target.
.PHONY: all
all: $(builddir)/sharp.node

